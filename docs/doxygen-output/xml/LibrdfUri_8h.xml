<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="LibrdfUri_8h" kind="file" language="C++">
    <compoundname>LibrdfUri.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">librdf.h</includes>
    <includes refid="LibrdfException_8h" local="yes">LibrdfException.h</includes>
    <includedby refid="LibrdfNode_8h" local="yes">src/redland/RedlandWrapper/src/LibrdfNode.h</includedby>
    <includedby refid="LibrdfParser_8h" local="yes">src/redland/RedlandWrapper/src/LibrdfParser.h</includedby>
    <includedby refid="LibrdfSerializer_8h" local="yes">src/redland/RedlandWrapper/src/LibrdfSerializer.h</includedby>
    <includedby refid="LibrdfUri_8cpp" local="yes">src/redland/RedlandWrapper/src/LibrdfUri.cpp</includedby>
    <includedby refid="RedlandWrapper_8h" local="yes">src/redland/RedlandWrapper/src/RedlandWrapper.h</includedby>
    <incdepgraph>
      <node id="2648">
        <label>exception</label>
      </node>
      <node id="2647">
        <label>LibrdfException.h</label>
        <link refid="LibrdfException_8h_source"/>
        <childnode refid="2648" relation="include">
        </childnode>
        <childnode refid="2649" relation="include">
        </childnode>
      </node>
      <node id="2644">
        <label>src/redland/RedlandWrapper/src/LibrdfUri.h</label>
        <link refid="LibrdfUri_8h"/>
        <childnode refid="2645" relation="include">
        </childnode>
        <childnode refid="2646" relation="include">
        </childnode>
        <childnode refid="2647" relation="include">
        </childnode>
      </node>
      <node id="2649">
        <label>iostream</label>
      </node>
      <node id="2646">
        <label>librdf.h</label>
      </node>
      <node id="2645">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2661">
        <label>src/omexmeta/Triples.h</label>
        <link refid="Triples_8h_source"/>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2662" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
      </node>
      <node id="2660">
        <label>src/omexmeta/Triple.h</label>
        <link refid="Triple_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
      </node>
      <node id="2672">
        <label>src/omexmeta/OmexMetaUtils.h</label>
        <link refid="OmexMetaUtils_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2673" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
        <childnode refid="2675" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
      </node>
      <node id="2677">
        <label>src/redland/RedlandWrapper/src/LibrdfSerializer.h</label>
        <link refid="LibrdfSerializer_8h_source"/>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
      <node id="2653">
        <label>src/omexmeta/Participant.h</label>
        <link refid="Participant_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
      </node>
      <node id="2657">
        <label>src/omexmeta/RDF.h</label>
        <link refid="RDF_8h_source"/>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
      </node>
      <node id="2658">
        <label>src/omexmeta/PhysicalForce.h</label>
        <link refid="PhysicalForce_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
      </node>
      <node id="2654">
        <label>src/omexmeta/Editor.h</label>
        <link refid="Editor_8h_source"/>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
      </node>
      <node id="2676">
        <label>src/omexmeta/Query.h</label>
        <link refid="Query_8h_source"/>
        <childnode refid="2672" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
      </node>
      <node id="2665">
        <label>src/omexmeta/PhysicalProperty.h</label>
        <link refid="PhysicalProperty_8h_source"/>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
      </node>
      <node id="2668">
        <label>src/redland/RedlandWrapper/src/LibrdfModel.h</label>
        <link refid="LibrdfModel_8h_source"/>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2677" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
      <node id="2669">
        <label>src/redland/RedlandWrapper/src/LibrdfParser.h</label>
        <link refid="LibrdfParser_8h_source"/>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
      <node id="2651">
        <label>src/redland/RedlandWrapper/src/LibrdfNode.h</label>
        <link refid="LibrdfNode_8h_source"/>
        <childnode refid="2652" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2666" relation="include">
        </childnode>
        <childnode refid="2667" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2677" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
      <node id="2656">
        <label>src/omexmeta/OmexMetaCApi.h</label>
        <link refid="OmexMetaCApi_8h_source"/>
      </node>
      <node id="2670">
        <label>src/redland/RedlandWrapper/src/RedlandWrapper.h</label>
        <link refid="RedlandWrapper_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2671" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
        <childnode refid="2676" relation="include">
        </childnode>
        <childnode refid="2657" relation="include">
        </childnode>
      </node>
      <node id="2674">
        <label>src/omexmeta/OmexMetaXmlAssistant.h</label>
        <link refid="OmexMetaXmlAssistant_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
      </node>
      <node id="2663">
        <label>src/omexmeta/PhysicalPhenomenon.h</label>
        <link refid="PhysicalPhenomenon_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2658" relation="include">
        </childnode>
        <childnode refid="2659" relation="include">
        </childnode>
      </node>
      <node id="2650">
        <label>src/redland/RedlandWrapper/src/LibrdfUri.h</label>
        <link refid="LibrdfUri_8h"/>
        <childnode refid="2651" relation="include">
        </childnode>
        <childnode refid="2669" relation="include">
        </childnode>
        <childnode refid="2677" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
      <node id="2671">
        <label>src/omexmeta/MetaID.h</label>
        <link refid="MetaID_8h_source"/>
        <childnode refid="2672" relation="include">
        </childnode>
        <childnode refid="2674" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
      </node>
      <node id="2666">
        <label>src/omexmeta/Resource.h</label>
        <link refid="Resource_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2665" relation="include">
        </childnode>
      </node>
      <node id="2664">
        <label>src/omexmeta/PhysicalEntity.h</label>
        <link refid="PhysicalEntity_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
      </node>
      <node id="2659">
        <label>src/omexmeta/PhysicalProcess.h</label>
        <link refid="PhysicalProcess_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
        <childnode refid="2656" relation="include">
        </childnode>
      </node>
      <node id="2667">
        <label>src/redland/RedlandWrapper/src/LibrdfStatement.h</label>
        <link refid="LibrdfStatement_8h_source"/>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2668" relation="include">
        </childnode>
        <childnode refid="2678" relation="include">
        </childnode>
      </node>
      <node id="2662">
        <label>src/omexmeta/PersonalInformation.h</label>
        <link refid="PersonalInformation_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2655" relation="include">
        </childnode>
      </node>
      <node id="2678">
        <label>src/redland/RedlandWrapper/src/LibrdfStorage.h</label>
        <link refid="LibrdfStorage_8h_source"/>
        <childnode refid="2668" relation="include">
        </childnode>
        <childnode refid="2670" relation="include">
        </childnode>
      </node>
      <node id="2675">
        <label>src/omexmeta/Predicate.h</label>
        <link refid="Predicate_8h_source"/>
        <childnode refid="2654" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
      </node>
      <node id="2652">
        <label>src/omexmeta/Subject.h</label>
        <link refid="Subject_8h_source"/>
        <childnode refid="2653" relation="include">
        </childnode>
        <childnode refid="2660" relation="include">
        </childnode>
        <childnode refid="2661" relation="include">
        </childnode>
        <childnode refid="2664" relation="include">
        </childnode>
        <childnode refid="2663" relation="include">
        </childnode>
      </node>
      <node id="2655">
        <label>src/omexmeta/OmexMeta.h</label>
        <link refid="OmexMeta_8h_source"/>
      </node>
      <node id="2673">
        <label>src/omexmeta/MarkupIdentifier.h</label>
        <link refid="MarkupIdentifier_8h_source"/>
        <childnode refid="2657" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classredland_1_1LibrdfUri" prot="public">redland::LibrdfUri</innerclass>
    <innernamespace refid="namespaceredland">redland</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>Ciaran<sp/>on<sp/>5/17/2020.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBOMEXMETA_LIBRDFURI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LIBOMEXMETA_LIBRDFURI_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;librdf.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LibrdfException.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceredland" kindref="compound">redland</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classredland_1_1LibrdfUri" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>librdf_uri<sp/>*uri_<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Hidden<sp/>to<sp/>make<sp/>creating<sp/>with<sp/>raw<sp/>ptr<sp/>more<sp/>explicit.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref>(librdf_uri<sp/>*uri);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>create<sp/>a<sp/>LibrdfUri<sp/>object<sp/>from<sp/>a<sp/>raw<sp/>librdf_uri*<sp/>pointer</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>uri<sp/>pointer<sp/>to<sp/>a<sp/>librdf_uri<sp/>object.<sp/>Created<sp/>with<sp/>librdf_new_*<sp/>methods<sp/>from<sp/>librdf</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@details<sp/>caller<sp/>is<sp/>responsible<sp/>for<sp/>freeing<sp/>the<sp/>uri.<sp/>See<sp/>LibrdfUri::freeUri().</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>fromRawPtr(librdf_uri<sp/>*uri);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>create<sp/>a<sp/>LibrdfUri<sp/>object<sp/>from<sp/>a<sp/>filename<sp/>string</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>filename<sp/>string<sp/>representing<sp/>path<sp/>on<sp/>system.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@details<sp/>caller<sp/>is<sp/>responsible<sp/>for<sp/>freeing<sp/>the<sp/>uri.<sp/>See<sp/>LibrdfUri::freeUri().</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>string<sp/>&quot;file://&quot;<sp/>is<sp/>prepended<sp/>onto<sp/>any<sp/>string<sp/>that<sp/>doesn&apos;t<sp/>already<sp/>have<sp/>it</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>at<sp/>the<sp/>begining<sp/>of<sp/>the<sp/>string.<sp/>This<sp/>indicates<sp/>to<sp/>librdf<sp/>that<sp/>its<sp/>a<sp/>path<sp/>on<sp/>system</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>developers:<sp/>Note<sp/>this<sp/>function<sp/>should<sp/>really<sp/>replace<sp/>OmexMetaUtils::prepareBaseUri</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>fromFilename(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>new<sp/>uri<sp/>from<sp/>an<sp/>old<sp/>uri<sp/>by<sp/>concatonating<sp/>to<sp/>the<sp/>end.</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>old_name<sp/>A<sp/>librdf_uri*<sp/>instance</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>local_name<sp/>A<sp/>string<sp/>to<sp/>concatonate<sp/>onto<sp/>the<sp/>end<sp/>of<sp/>@param<sp/>old_name</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>LibrdfUri<sp/>uri<sp/>=<sp/>LibrdfUri(&quot;./local_filename&quot;);</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>LibrdfUri<sp/>uri2<sp/>=<sp/>LibrdfUri::concatonate(uri.get(),<sp/>&quot;new_uri&quot;);</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>std::cout<sp/>&lt;&lt;<sp/>uri2.str()<sp/>std::endl;</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Will<sp/>output<sp/>`./local_filenamenew_uri`<sp/>to<sp/>console.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>concatonate(librdf_uri<sp/>*old_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;local_name);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>new<sp/>uri<sp/>from<sp/>an<sp/>this<sp/>LibrdfUri<sp/>by<sp/>concatonating<sp/>to<sp/>the<sp/>end.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@param<sp/>local_name<sp/>A<sp/>string<sp/>to<sp/>concatonate<sp/>onto<sp/>the<sp/>end<sp/>of<sp/>@param<sp/>old_name</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>LibrdfUri<sp/>uri<sp/>=<sp/>LibrdfUri(&quot;./local_filename&quot;);</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>LibrdfUri<sp/>uri2<sp/>=<sp/>uri.concatonate(&quot;new_uri&quot;);</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>std::cout<sp/>&lt;&lt;<sp/>uri2.str()<sp/>std::endl;</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Will<sp/>output<sp/>`./local_filenamenew_uri`<sp/>to<sp/>console.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>For<sp/>developers:<sp/>could<sp/>overload<sp/>the<sp/>&quot;+&quot;<sp/>operator<sp/>here<sp/>for<sp/>syntatic</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sugar.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>concatonate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;local_name)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/>str()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;uri);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>librdf_uri<sp/>*</highlight><highlight class="keyword">get</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNull()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isEmpty()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>freeUri();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>checks<sp/>whether<sp/>uri<sp/>contained<sp/>in<sp/>LirdfUri<sp/>is<sp/>a<sp/>filename<sp/>uri</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@returns<sp/>true<sp/>is<sp/>uri<sp/>is<sp/>a<sp/>file<sp/>type<sp/>uri</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isFileUri()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref><sp/>&amp;rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>creates<sp/>a<sp/>filename<sp/>type<sp/>uri<sp/>from<sp/>existing<sp/>uri</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>@returns<sp/>std::string<sp/>containing<sp/>the<sp/>filename<sp/>type<sp/>uri.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>std::string<sp/>toFilenameString()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getUsage();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//LIBOMEXMETA_LIBRDFURI_H</highlight></codeline>
    </programlisting>
    <location file="src/redland/RedlandWrapper/src/LibrdfUri.h"/>
  </compounddef>
</doxygen>
