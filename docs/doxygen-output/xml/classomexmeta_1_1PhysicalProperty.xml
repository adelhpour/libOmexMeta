<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classomexmeta_1_1PhysicalProperty" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::PhysicalProperty</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalProperty_1a44e53030e70fa00bdf91df7097bab5dc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PhysicalProperty::isPropertyOfValue</definition>
        <argsstring></argsstring>
        <name>isPropertyOfValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="26" column="21" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalProperty_1a85c53684ca7176b68bf8342cc20de639" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PhysicalProperty::isVersionOfValue</definition>
        <argsstring></argsstring>
        <name>isVersionOfValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="27" column="21" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalProperty_1acc22e1576caaad8b1d297531a59d8b84" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PhysicalProperty::model_uri_</definition>
        <argsstring></argsstring>
        <name>model_uri_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="28" column="21" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a6983c4f7e0b46cf9d8061f13bd3c3311" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::validate</definition>
        <argsstring>()</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="29" column="14" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="23" bodyend="53"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1af3b3379a751ebb15f7a5ea0cae8cb4d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PhysicalProperty::operator==</definition>
        <argsstring>(const PhysicalProperty &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="32" column="14" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a1a85ba2c50f5b79e49e8a01b96756f0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PhysicalProperty::operator!=</definition>
        <argsstring>(const PhysicalProperty &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="34" column="14" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1af0ff6c915ed8b5d977a94c5ebee4edca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalProperty::PhysicalProperty</definition>
        <argsstring>()=default</argsstring>
        <name>PhysicalProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="36" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a76d1ffd15ea6aad76c322bdd8991a111" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalProperty::PhysicalProperty</definition>
        <argsstring>(std::string subject_str, std::string resource_str, std::string model_uri)</argsstring>
        <name>PhysicalProperty</name>
        <param>
          <type>std::string</type>
          <declname>subject_str</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>resource_str</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>model_uri</declname>
        </param>
        <briefdescription>
<para>constructor for <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physical_property_string</parametername>
</parameternamelist>
<parameterdescription>
<para>is used to create a URI node representing the physical property </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="42" column="9" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="11" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a9a8b291c9516decaa67afa1b15ac7c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalProperty::PhysicalProperty</definition>
        <argsstring>(std::string subject_str, std::string model_uri)</argsstring>
        <name>PhysicalProperty</name>
        <param>
          <type>std::string</type>
          <declname>subject_str</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>model_uri</declname>
        </param>
        <briefdescription>
<para>constructor for <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>physical_property_string</parametername>
</parameternamelist>
<parameterdescription>
<para>is used to create a URI node representing the physical property </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="48" column="9" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="17" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1acf399e14fd579efc6384ebc677341ead" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getSubject</definition>
        <argsstring>() const</argsstring>
        <name>getSubject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="50" column="28" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a2d60b90270a6ba73646707b8c475fbb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getResource</definition>
        <argsstring>() const</argsstring>
        <name>getResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="52" column="28" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a0f27071bfef5a9de4eb89fb21461ba76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getModelUri</definition>
        <argsstring>() const</argsstring>
        <name>getModelUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="54" column="28" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1afd367b237fc93654c59c3b0c203b4640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::setModelUri</definition>
        <argsstring>(const std::string &amp;model_uri)</argsstring>
        <name>setModelUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>model_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="56" column="14" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a4b9ad0a7fe22a3476d7e2f08834bbd74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getSubjectStr</definition>
        <argsstring>() const</argsstring>
        <name>getSubjectStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="58" column="28" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a8bb7c912a21e0e318a9e16d2af1801e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::setSubject</definition>
        <argsstring>(const std::string &amp;subject)</argsstring>
        <name>setSubject</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>subject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="60" column="14" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="85" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a9177d21e829cbd872217ba6f9619d427" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getResourceStr</definition>
        <argsstring>() const</argsstring>
        <name>getResourceStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="62" column="28" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a420dab52a424d1be5a8610e19407980c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::setResource</definition>
        <argsstring>(const std::string &amp;resource)</argsstring>
        <name>setResource</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="64" column="14" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a03056210a70ea8446b44de250646eeb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref></type>
        <definition>Triples omexmeta::PhysicalProperty::toTriples</definition>
        <argsstring>(const std::string &amp;property_metaid) const</argsstring>
        <name>toTriples</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>property_metaid</declname>
        </param>
        <briefdescription>
<para>creates a <ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref> object using the information in the <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a <ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref> object containing the set of <ref refid="classomexmeta_1_1Triple" kindref="compound">Triple</ref> object used to represent this <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="70" column="18" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="56" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/PhysicalProperty.h" line="24" column="5" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="24" bodyend="72"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1PhysicalProperty_1a0f27071bfef5a9de4eb89fb21461ba76" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getModelUri</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a2d60b90270a6ba73646707b8c475fbb1" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getResource</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a9177d21e829cbd872217ba6f9619d427" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getResourceStr</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1acf399e14fd579efc6384ebc677341ead" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getSubject</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a4b9ad0a7fe22a3476d7e2f08834bbd74" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getSubjectStr</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1acc22e1576caaad8b1d297531a59d8b84" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>model_uri_</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a1a85ba2c50f5b79e49e8a01b96756f0a" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1af3b3379a751ebb15f7a5ea0cae8cb4d6" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1af0ff6c915ed8b5d977a94c5ebee4edca" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>PhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a76d1ffd15ea6aad76c322bdd8991a111" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>PhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a9a8b291c9516decaa67afa1b15ac7c2d" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>PhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a85c53684ca7176b68bf8342cc20de639" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>isVersionOfValue</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1afd367b237fc93654c59c3b0c203b4640" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>setModelUri</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a420dab52a424d1be5a8610e19407980c" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>setResource</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a8bb7c912a21e0e318a9e16d2af1801e5" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>setSubject</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a44e53030e70fa00bdf91df7097bab5dc" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>isPropertyOfValue</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a03056210a70ea8446b44de250646eeb5" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>toTriples</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a6983c4f7e0b46cf9d8061f13bd3c3311" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
