<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classomexmeta_1_1PhysicalProperty" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::PhysicalProperty</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalProperty_1a44e53030e70fa00bdf91df7097bab5dc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PhysicalProperty::subject_</definition>
        <argsstring></argsstring>
        <name>subject_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="37" column="1" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalProperty_1a85c53684ca7176b68bf8342cc20de639" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PhysicalProperty::resource_</definition>
        <argsstring></argsstring>
        <name>resource_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="38" column="1" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1PhysicalProperty_1a4d0963b9ec2f3f42ac0dafa23ee92347" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::PhysicalProperty::local_uri_</definition>
        <argsstring></argsstring>
        <name>local_uri_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="39" column="1" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a6983c4f7e0b46cf9d8061f13bd3c3311" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::validate</definition>
        <argsstring>()</argsstring>
        <name>validate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="40" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="19" bodyend="34"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1af3b3379a751ebb15f7a5ea0cae8cb4d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PhysicalProperty::operator==</definition>
        <argsstring>(const PhysicalProperty &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="43" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a1a85ba2c50f5b79e49e8a01b96756f0a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::PhysicalProperty::operator!=</definition>
        <argsstring>(const PhysicalProperty &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1PhysicalProperty" kindref="compound">PhysicalProperty</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="45" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1af0ff6c915ed8b5d977a94c5ebee4edca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalProperty::PhysicalProperty</definition>
        <argsstring>()=default</argsstring>
        <name>PhysicalProperty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a81e8fc030e12fc1a9491a7e251312038" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::PhysicalProperty::PhysicalProperty</definition>
        <argsstring>(std::string subject_str, std::string resource_str, std::string local_uri)</argsstring>
        <name>PhysicalProperty</name>
        <param>
          <type>std::string</type>
          <declname>subject_str</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>resource_str</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>local_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="53" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="12" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1acf399e14fd579efc6384ebc677341ead" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getSubject</definition>
        <argsstring>() const</argsstring>
        <name>getSubject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="55" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a2d60b90270a6ba73646707b8c475fbb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getResource</definition>
        <argsstring>() const</argsstring>
        <name>getResource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="57" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1ab498df5bb21e010614ae43c0c8e70bb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getLocalUri</definition>
        <argsstring>() const</argsstring>
        <name>getLocalUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="59" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1af4684dd78ff1b0ebf71f2f7ca94a78d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::setLocalUri</definition>
        <argsstring>(const std::string &amp;localUri)</argsstring>
        <name>setLocalUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>localUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="61" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a4b9ad0a7fe22a3476d7e2f08834bbd74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getSubjectStr</definition>
        <argsstring>() const</argsstring>
        <name>getSubjectStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="63" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a8bb7c912a21e0e318a9e16d2af1801e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::setSubject</definition>
        <argsstring>(const std::string &amp;subject)</argsstring>
        <name>setSubject</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>subject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="65" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a9177d21e829cbd872217ba6f9619d427" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::PhysicalProperty::getResourceStr</definition>
        <argsstring>() const</argsstring>
        <name>getResourceStr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="67" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1a420dab52a424d1be5a8610e19407980c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::PhysicalProperty::setResource</definition>
        <argsstring>(const std::string &amp;resource)</argsstring>
        <name>setResource</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>resource</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="69" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1PhysicalProperty_1aa0ef232bbf498c888af52b27f0edced4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref></type>
        <definition>Triples omexmeta::PhysicalProperty::toTriples</definition>
        <argsstring>(std::string property_metaid) const</argsstring>
        <name>toTriples</name>
        <param>
          <type>std::string</type>
          <declname>property_metaid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/PhysicalProperty.h" line="96" column="1" bodyfile="src/omexmeta/PhysicalProperty.cpp" bodystart="37" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/PhysicalProperty.h" line="35" column="1" bodyfile="src/omexmeta/PhysicalProperty.h" bodystart="35" bodyend="100"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1PhysicalProperty_1ab498df5bb21e010614ae43c0c8e70bb7" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a2d60b90270a6ba73646707b8c475fbb1" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getResource</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a9177d21e829cbd872217ba6f9619d427" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getResourceStr</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1acf399e14fd579efc6384ebc677341ead" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getSubject</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a4b9ad0a7fe22a3476d7e2f08834bbd74" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>getSubjectStr</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a4d0963b9ec2f3f42ac0dafa23ee92347" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>local_uri_</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a1a85ba2c50f5b79e49e8a01b96756f0a" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1af3b3379a751ebb15f7a5ea0cae8cb4d6" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1af0ff6c915ed8b5d977a94c5ebee4edca" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>PhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a81e8fc030e12fc1a9491a7e251312038" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>PhysicalProperty</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a85c53684ca7176b68bf8342cc20de639" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>resource_</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1af4684dd78ff1b0ebf71f2f7ca94a78d9" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>setLocalUri</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a420dab52a424d1be5a8610e19407980c" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>setResource</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a8bb7c912a21e0e318a9e16d2af1801e5" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>setSubject</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a44e53030e70fa00bdf91df7097bab5dc" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>subject_</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1aa0ef232bbf498c888af52b27f0edced4" prot="public" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>toTriples</name></member>
      <member refid="classomexmeta_1_1PhysicalProperty_1a6983c4f7e0b46cf9d8061f13bd3c3311" prot="private" virt="non-virtual"><scope>omexmeta::PhysicalProperty</scope><name>validate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
