<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="CMakeLists_8txt" kind="file" language="C++">
    <compoundname>CMakeLists.txt</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="CMakeLists_8txt_1aadcc2fde269516fe2487340bb7f71f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>set</definition>
        <argsstring>(target OmexMeta) SET(OMEXMETA_PUBLIC_HEADERS &quot;RDF.h&quot; &quot;Editor.h&quot; &quot;Triple.h&quot; &quot;Triples.h&quot; &quot;PhysicalForce.h&quot; &quot;PhysicalEntity.h&quot; &quot;PhysicalProcess.h&quot; &quot;PersonalInformation.h&quot; &quot;OmexMeta.h&quot; &quot;$</argsstring>
        <name>set</name>
        <param>
          <type>target</type>
          <declname>OmexMeta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/CMakeLists.txt" line="5" column="1" bodyfile="src/omexmeta/CMakeLists.txt" bodystart="5" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="CMakeLists_8txt_1afe78502a55d84f7c02903f9a43a6b9f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>omexmeta_export h</type>
        <definition>omexmeta_export h set</definition>
        <argsstring>(OMEXMETA_HEADERS ${OMEXMETA_PUBLIC_HEADERS} &quot;OmexMetaUtils.h&quot; &quot;CurlGet.h&quot; &quot;OmexMetaXmlAssistant.h&quot; &quot;Subject.h&quot; &quot;Resource.h&quot; &quot;Query.h&quot; &quot;Predicate.h&quot; &quot;MetaID.h&quot; &quot;PhysicalProperty.h&quot; &quot;Participant.h&quot; &quot;PhysicalPhenomenon.h&quot; &quot;AnnotationType.h&quot; &quot;OmexMeta.h&quot; &quot;MarkupIdentifier.h&quot; &quot;ElementExtractor.h&quot; &quot;SBMLSemanticExtraction.h&quot; &quot;OmexMetaXmlType.h&quot; &quot;Error.h&quot;) set(OMEXMETA_SOURCES &quot;ElementExtractor.cpp&quot; &quot;SBMLSemanticExtraction.cpp&quot; &quot;OmexMetaUtils.cpp&quot; &quot;RDF.cpp&quot; &quot;Query.cpp&quot; &quot;CurlGet.cpp&quot; &quot;OmexMetaXmlAssistant.cpp&quot; &quot;Subject.cpp&quot; &quot;Resource.cpp&quot; &quot;Predicate.cpp&quot; &quot;Triple.cpp&quot; &quot;Triples.cpp&quot; &quot;PhysicalProperty.cpp&quot; &quot;MetaID.cpp&quot; &quot;Participant.cpp&quot; &quot;PhysicalEntity.cpp&quot; &quot;PhysicalPhenomenon.cpp&quot; &quot;Editor.cpp&quot; &quot;PhysicalProcess.cpp&quot; &quot;PhysicalForce.cpp&quot; &quot;PersonalInformation.cpp&quot; &quot;MarkupIdentifier.cpp&quot;) add_library($</argsstring>
        <name>set</name>
        <param>
          <type>OMEXMETA_HEADERS ${OMEXMETA_PUBLIC_HEADERS} &quot;OmexMetaUtils.h&quot; &quot;CurlGet.h&quot; &quot;OmexMetaXmlAssistant.h&quot; &quot;Subject.h&quot; &quot;Resource.h&quot; &quot;Query.h&quot; &quot;Predicate.h&quot; &quot;MetaID.h&quot; &quot;PhysicalProperty.h&quot; &quot;Participant.h&quot; &quot;PhysicalPhenomenon.h&quot; &quot;AnnotationType.h&quot; &quot;OmexMeta.h&quot; &quot;MarkupIdentifier.h&quot; &quot;ElementExtractor.h&quot; &quot;SBMLSemanticExtraction.h&quot; &quot;OmexMetaXmlType.h&quot; &quot;Error.h&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/CMakeLists.txt" line="21" column="1" bodyfile="src/omexmeta/CMakeLists.txt" bodystart="21" bodyend="78"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">##########################################################################</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>Set<sp/>libOmexMeta<sp/>sources</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">set</highlight><highlight class="normal">(target<sp/>OmexMeta)</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">#<sp/>Note:<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>doesn</highlight><highlight class="stringliteral">&apos;t<sp/>work<sp/>as<sp/>intended<sp/>when<sp/>using<sp/>the<sp/>install<sp/>tree.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">SET(OMEXMETA_PUBLIC_HEADERS</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;RDF.h&quot;</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Editor.h&quot;</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Triple.h&quot;</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Triples.h&quot;</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalForce.h&quot;</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalEntity.h&quot;</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalProcess.h&quot;</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PersonalInformation.h&quot;</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;OmexMeta.h&quot;</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;${CMAKE_CURRENT_BINARY_DIR}/omexmeta_export.h&quot;</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral">set(OMEXMETA_HEADERS</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>${OMEXMETA_PUBLIC_HEADERS}</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;OmexMetaUtils.h&quot;</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;CurlGet.h&quot;</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;OmexMetaXmlAssistant.h&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Subject.h&quot;</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Resource.h&quot;</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Query.h&quot;</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Predicate.h&quot;</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;MetaID.h&quot;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalProperty.h&quot;</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Participant.h&quot;</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalPhenomenon.h&quot;</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;AnnotationType.h&quot;</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;OmexMeta.h&quot;</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;MarkupIdentifier.h&quot;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;ElementExtractor.h&quot;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;SBMLSemanticExtraction.h&quot;</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;OmexMetaXmlType.h&quot;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Error.h&quot;</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/>dbg.h</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral">set(OMEXMETA_SOURCES</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;ElementExtractor.cpp&quot;</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;SBMLSemanticExtraction.cpp&quot;</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;OmexMetaUtils.cpp&quot;</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;RDF.cpp&quot;</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Query.cpp&quot;</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;CurlGet.cpp&quot;</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;OmexMetaXmlAssistant.cpp&quot;</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Subject.cpp&quot;</highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Resource.cpp&quot;</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Predicate.cpp&quot;</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Triple.cpp&quot;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Triples.cpp&quot;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalProperty.cpp&quot;</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;MetaID.cpp&quot;</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Participant.cpp&quot;</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalEntity.cpp&quot;</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalPhenomenon.cpp&quot;</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;Editor.cpp&quot;</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalProcess.cpp&quot;</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PhysicalForce.cpp&quot;</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;PersonalInformation.cpp&quot;</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;MarkupIdentifier.cpp&quot;</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral">#####################################################################3</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral">#</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral">#</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral">#<sp/>static<sp/>library</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral">add_library(${target}-static<sp/>STATIC<sp/>${OMEXMETA_HEADERS}<sp/>${OMEXMETA_SOURCES})</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral">#<sp/>add<sp/>redland-combined<sp/>as<sp/>dependency</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral">add_dependencies(${target}-static<sp/>redland-combined-static)</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral">#includes</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral">target_include_directories(</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${target}-static<sp/>PRIVATE</highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${INCLUDE_DIRECTORIES}</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_CURRENT_BINARY_DIR}<sp/>#<sp/>for<sp/>export<sp/>header</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral">target_compile_definitions(</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${target}-static<sp/>PRIVATE</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RAPTOR_STATIC</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RASQAL_STATIC</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LIBRDF_STATIC</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OMEXMETA_STATIC_DEFINE<sp/>#indicate<sp/>use<sp/>of<sp/>omex<sp/>static<sp/>library</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REDLAND_STATIC_DEFINE<sp/>#<sp/>indivate<sp/>use<sp/>of<sp/>redland<sp/>static<sp/>library</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral">#<sp/>links</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral">target_link_libraries(</highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${target}-static<sp/>PRIVATE</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redland-combined-static</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${LINK_LIBRARIES}</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral">set_target_properties(${target}-static<sp/>PROPERTIES<sp/>PUBLIC_HEADER<sp/>&quot;${OMEXMETA_HEADERS}&quot;)</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral">#<sp/>install</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral">install(</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TARGETS<sp/>${target}-static</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT<sp/>${target}-static</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RUNTIME<sp/>DESTINATION<sp/>${CMAKE_INSTALL_BINDIR}</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LIBRARY<sp/>DESTINATION<sp/>${CMAKE_INSTALL_LIBDIR}</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCHIVE<sp/>DESTINATION<sp/>${CMAKE_INSTALL_LIBDIR}</highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUBLIC_HEADER<sp/>DESTINATION<sp/>${CMAKE_INSTALL_INCLUDEDIR}/omexmeta</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral">#<sp/>install<sp/>the<sp/>export<sp/>info</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral">install(</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT<sp/>${target}-static</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION<sp/>${CMAKE_INSTALL_LIBDIR}/cmake/omexmeta</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAMESPACE<sp/>OmexMeta::</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>OmexMetaStatic.cmake</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral">#<sp/>and<sp/>build<sp/>the<sp/>CAPI<sp/>if<sp/>needed</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral">if<sp/>(${BUILD_C_API})</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>add_subdirectory(C)</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral">endif<sp/>()</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral">#<sp/>shared<sp/>library</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral">add_library(${target}<sp/>SHARED<sp/>&quot;${OMEXMETA_HEADERS}&quot;<sp/>&quot;${OMEXMETA_SOURCES}&quot;)</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral">set_target_properties(${target}<sp/>PROPERTIES<sp/>SOVERSION<sp/>${LIBOMEXMETA_VERSION})</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral">#<sp/>includes</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral">target_include_directories(</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${target}<sp/>PRIVATE</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${INCLUDE_DIRECTORIES}</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_CURRENT_BINARY_DIR}</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral">#<sp/>msvc,<sp/>linux,<sp/>macos<sp/>values</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral">#<sp/>On<sp/>msvc<sp/>this<sp/>is<sp/>the<sp/>lib<sp/>file<sp/>counterpart<sp/>to<sp/>the<sp/>redland-combined<sp/>dll</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral">#<sp/>on<sp/>linux<sp/>simply<sp/>the<sp/>.a<sp/>file</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral">#<sp/>only<sp/>for<sp/>shared<sp/>lib</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral">SetCrossPlatform(REDLAND_LINK_LIBRARY<sp/>${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/redland-combined.lib<sp/>$&lt;TARGET_FILE:redland-combined-static&gt;<sp/>$&lt;TARGET_FILE:redland-combined-static&gt;)</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral">#<sp/>links</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral">target_link_libraries(${target}<sp/>PUBLIC</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${REDLAND_LINK_LIBRARY}</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${LINK_LIBRARIES}</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral">#<sp/>Technically<sp/>linux<sp/>version<sp/>depends<sp/>on<sp/>static<sp/>version<sp/>and<sp/>windows<sp/>depends<sp/>on<sp/>the<sp/>dynamic<sp/>library</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral">add_dependencies(${target}<sp/>redland-combined<sp/>redland-combined-static)</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral">set_target_properties(${target}<sp/>PROPERTIES<sp/>PUBLIC_HEADER<sp/>&quot;${OMEXMETA_HEADERS}&quot;)</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral">#<sp/>Write<sp/>mytools_export.h<sp/>to<sp/>the<sp/>current<sp/>binary<sp/>directory</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral">generate_export_header(${target}<sp/>BASE_NAME<sp/>OMEXMETA)</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral">#<sp/>Static<sp/>target<sp/>needs<sp/>special<sp/>preprocessor<sp/>define</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral">#<sp/>to<sp/>prevent<sp/>symbol<sp/>import/export<sp/>keywords<sp/>being<sp/>added</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral">target_compile_definitions(</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${target}<sp/>PRIVATE</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OmexMeta_EXPORTS<sp/>#<sp/>indicate<sp/>that<sp/>we<sp/>are<sp/>building<sp/>this<sp/>library<sp/>to<sp/>get<sp/>correct<sp/>export<sp/>symbols</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral">install(TARGETS<sp/>${target}</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT<sp/>${target}</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RUNTIME<sp/>DESTINATION<sp/>${CMAKE_INSTALL_BINDIR}</highlight></codeline>
<codeline lineno="177"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LIBRARY<sp/>DESTINATION<sp/>${CMAKE_INSTALL_LIBDIR}</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ARCHIVE<sp/>DESTINATION<sp/>${CMAKE_INSTALL_LIBDIR}</highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PUBLIC_HEADER<sp/>DESTINATION<sp/>${CMAKE_INSTALL_INCLUDEDIR}/omexmeta</highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral">#<sp/>install<sp/>the<sp/>export<sp/>info</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral">install(</highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EXPORT<sp/>${target}</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION<sp/>${CMAKE_INSTALL_LIBDIR}/cmake/omexmeta</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NAMESPACE<sp/>OmexMeta::</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE<sp/>${target}.cmake</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral">)</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral">#<sp/>for<sp/>automatically<sp/>installing<sp/>to<sp/>folder<sp/>containing<sp/>python<sp/>api</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral">install(FILES<sp/>$&lt;TARGET_FILE:${target}&gt;<sp/>DESTINATION<sp/>${PYOMEXMETA_DIR})</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral">install(FILES<sp/>$&lt;TARGET_FILE:OmexMetaCAPI&gt;<sp/>DESTINATION<sp/>${PYOMEXMETA_DIR})</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral">#<sp/>install<sp/>the<sp/>shared<sp/>library<sp/>dependencies</highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral">if<sp/>(PLATFORM<sp/>STREQUAL<sp/>&quot;linux&quot;)</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>On<sp/>linux<sp/>we<sp/>only<sp/>need<sp/>a<sp/>few<sp/>dynamic<sp/>libraries<sp/>due<sp/>to<sp/>static<sp/>linking<sp/>the<sp/>rest.</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>install(FILES<sp/>${LIBXML2_LIBRARY}</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${LIBXSLT_LIBRARY}</highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${SQLITE3_LIBRARY}</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${BERKELY_LIBRARY}</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${POSTGRESQL_LIBRARY}</highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DESTINATION<sp/>${PYOMEXMETA_DIR})</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>I<sp/>had<sp/>issues<sp/>installing<sp/>a<sp/>few<sp/>of<sp/>the<sp/>dynamic<sp/>libraries,<sp/>namely:</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>${LIBXML2_LIBRARY}</highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>${LIBXSLT_LIBRARY}</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>${SQLITE3_LIBRARY}</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>${BERKELY_LIBRARY}</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>${POSTGRESQL_LIBRARY}</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Checkout<sp/>the<sp/>LINK_LIBRARIES<sp/>variable<sp/>for<sp/>details<sp/>on<sp/>which<sp/>were<sp/>statically</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>and<sp/>which<sp/>were<sp/>dynamically<sp/>linked.<sp/>I<sp/>later<sp/>realized<sp/>that<sp/>in<sp/>order<sp/>to<sp/>use<sp/>these<sp/>at<sp/>run<sp/>time<sp/>you<sp/>need<sp/>both<sp/>a<sp/>smbolic</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>link<sp/>link<sp/>libx.so.1<sp/>which<sp/>points<sp/>to<sp/>the<sp/>actual<sp/>library<sp/>libx.so.1.0.15.<sp/>Both</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>need<sp/>to<sp/>be<sp/>copied<sp/>into<sp/>the<sp/>pyomexmeta<sp/>src<sp/>directory<sp/>which<sp/>will<sp/>then<sp/>be<sp/>incorporated</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>into<sp/>the<sp/>python<sp/>docs-build.</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>This<sp/>is<sp/>a<sp/>viable<sp/>strategy,<sp/>and<sp/>should<sp/>probably<sp/>be<sp/>implemented<sp/>soon<sp/>so<sp/>users<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>need<sp/>to<sp/>manually<sp/>install<sp/>packages<sp/>from<sp/>apt.<sp/>However,<sp/>for<sp/>now,<sp/>we<sp/>rely<sp/>on<sp/>users</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>installing<sp/>these<sp/>dependencies<sp/>manually.</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>The<sp/>exception<sp/>is<sp/>the<sp/>libstdc++<sp/>library.<sp/>Since<sp/>ive<sp/>docs-build</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>using<sp/>a<sp/>later<sp/>version<sp/>than<sp/>is<sp/>easily<sp/>obtainably</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>using<sp/>apt-get,<sp/>I<sp/>just<sp/>distribute<sp/>along<sp/>with<sp/>python</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>install(FILES<sp/>${LIBSTDCXX6_LIBRARY}<sp/>DESTINATION<sp/>${PYOMEXMETA_DIR})</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>curl<sp/>was<sp/>statically<sp/>linked<sp/>in<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>install(FILES<sp/>&quot;${CURL_LIBRARY}&quot;<sp/>DESTINATION<sp/>${PYOMEXMETA_DIR}<sp/>RENAME<sp/>libsqlite.so.0)</highlight></codeline>
<codeline lineno="230"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral">elseif<sp/>(PLATFORM<sp/>STREQUAL<sp/>&quot;windows-msvc&quot;)</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>#<sp/>Just<sp/>take<sp/>all<sp/>of<sp/>them<sp/>on<sp/>windows,<sp/>since<sp/>we&apos;</highlight><highlight class="normal">ve<sp/>linked<sp/>dynamically<sp/>to<sp/>everything</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>install(FILES<sp/>${LIBRARIES}<sp/>DESTINATION<sp/>bin)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Remember<sp/>to<sp/>copy<sp/>dependency<sp/>dlls<sp/>to<sp/>pyomexmeta<sp/>directory</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>install(FILES<sp/>${LIBRARIES}<sp/>DESTINATION<sp/>${PYOMEXMETA_DIR})</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>install(FILES<sp/>$&lt;TARGET_FILE:<ref refid="namespaceredland" kindref="compound">redland</ref>-combined&gt;<sp/>DESTINATION<sp/>${PYOMEXMETA_DIR})</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/>Note:<sp/>I<sp/>deleted<sp/>the<sp/>code<sp/>that<sp/>copies<sp/>windows<sp/>redistributables<sp/>because</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/><sp/>the<sp/>package<sp/></highlight><highlight class="stringliteral">&quot;InstallRequiredSystemLibraries&quot;</highlight><highlight class="normal"><sp/>does<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>me</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>#<sp/><sp/>just<sp/>by<sp/>including<sp/>it.<sp/>(Very<sp/>nice).</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>find_file(API_MS_WIN_CORE_WOW64_L1_1_0_LIBRARY<sp/>NAMES<sp/>api-ms-win-core-wow64-l1-1-0.dll<sp/>PATHS<sp/>C:/Windows/System32/downlevel)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(REDISTRIB</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_INSTALL_PREFIX}/bin/concrt140.dll</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_INSTALL_PREFIX}/bin/msvcp140.dll</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_INSTALL_PREFIX}/bin/msvcp140_1.dll</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_INSTALL_PREFIX}/bin/msvcp140_2.dll</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_INSTALL_PREFIX}/bin/msvcp140_codecvt_ids.dll</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_INSTALL_PREFIX}/bin/vcruntime140.dll</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${CMAKE_INSTALL_PREFIX}/bin/vcruntime140_1.dll</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>${API_MS_WIN_CORE_WOW64_L1_1_0_LIBRARY}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(EXISTS<sp/></highlight><highlight class="stringliteral">&quot;${CMAKE_INSTALL_PREFIX}&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>install(FILES<sp/>${REDISTRIB}<sp/>DESTINATION<sp/>${PYOMEXMETA_DIR})</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message(FATAL_ERROR<sp/></highlight><highlight class="stringliteral">&quot;libOmexMeta<sp/>needs<sp/>to<sp/>be<sp/>installed<sp/>before<sp/>you<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#can<sp/>copy<sp/>windows<sp/>redistributables<sp/>into<sp/>python<sp/>directory.<sp/>Please<sp/>-DBUILD_PACKAGING=OFF<sp/>until<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#you<sp/>have<sp/>built<sp/>the<sp/>windows<sp/>install<sp/>tree.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>endif<sp/>()</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">elseif<sp/>(PLATFORM<sp/>STREQUAL<sp/>&quot;macos&quot;)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>message(STATUS<sp/>&quot;macos<sp/>==<sp/>sad<sp/>face<sp/>=[&quot;)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">endif<sp/>()</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>note<sp/>to<sp/>self.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>If<sp/>I&apos;m<sp/>using<sp/>the<sp/>install<sp/>tree<sp/>then<sp/>it<sp/>is<sp/>up<sp/>to<sp/>the<sp/>user<sp/>to<sp/>provide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>curl<sp/>and<sp/>libxml2<sp/>include<sp/>dirs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Curl<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/><sp/><sp/>collect<sp/>and<sp/>install<sp/>the<sp/>curl<sp/>headers<sp/>since<sp/>you&apos;ve<sp/>used<sp/>curl<sp/>as<sp/>a<sp/>dependency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/><sp/><sp/>Its<sp/>probably<sp/>worth<sp/>removing<sp/>this<sp/>dependency<sp/>as<sp/>the<sp/>OmexMetaUtils::download</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/><sp/><sp/>utility<sp/>isn&apos;t<sp/>essential.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(NOT<sp/>EXISTS<sp/>${CURL_INCLUDE_DIR})</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>message(FATAL_ERROR<sp/>&quot;No<sp/>curl<sp/>include<sp/>directory<sp/>found&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#file(GLOB<sp/>CURL_HEADERS<sp/>&quot;${CURL_INCLUDE_DIR}/curl</highlight><highlight class="comment">/*.h&quot;)</highlight></codeline>
<codeline lineno="280"><highlight class="comment">#message(STATUS<sp/>&quot;CURL<sp/>${CURL_INCLUDE_DIR}/curl/*.h<sp/>${CURL_HEADERS}&quot;)</highlight></codeline>
<codeline lineno="281"><highlight class="comment">#install(FILES<sp/>${CURL_HEADERS}<sp/>DESTINATION<sp/>&quot;include/curl&quot;)</highlight></codeline>
<codeline lineno="282"><highlight class="comment">#</highlight></codeline>
<codeline lineno="283"><highlight class="comment">##<sp/>libxml<sp/>headers</highlight></codeline>
<codeline lineno="284"><highlight class="comment">##<sp/><sp/><sp/>Again,<sp/>for<sp/>the<sp/>install<sp/>tree<sp/>to<sp/>be<sp/>functional<sp/>we<sp/>need</highlight></codeline>
<codeline lineno="285"><highlight class="comment">##<sp/><sp/><sp/>libxml<sp/>headers<sp/>available.<sp/>Simple<sp/>solution<sp/>is<sp/>to<sp/>copy<sp/>them</highlight></codeline>
<codeline lineno="286"><highlight class="comment">##<sp/><sp/><sp/>accross.<sp/>May<sp/>be<sp/>another<sp/>better<sp/>solution</highlight></codeline>
<codeline lineno="287"><highlight class="comment">#if<sp/>(NOT<sp/>EXISTS<sp/>${LIBXML2_INCLUDE_DIR})</highlight></codeline>
<codeline lineno="288"><highlight class="comment">#<sp/><sp/><sp/><sp/>message(FATAL_ERROR<sp/>&quot;No<sp/>libxml2<sp/>include<sp/>directory<sp/>found&quot;)</highlight></codeline>
<codeline lineno="289"><highlight class="comment">#endif<sp/>()</highlight></codeline>
<codeline lineno="290"><highlight class="comment">#</highlight></codeline>
<codeline lineno="291"><highlight class="comment">#file(GLOB<sp/>LIBXML_HEADERS<sp/>&quot;${LIBXML2_INCLUDE_DIR}/curl/*.h&quot;)</highlight></codeline>
<codeline lineno="292"><highlight class="comment">#message(STATUS<sp/>&quot;CURL<sp/>${LIBXML2_INCLUDE_DIR}/libxml/*.h<sp/>${LIBXML_HEADERS}&quot;)</highlight></codeline>
<codeline lineno="293"><highlight class="comment">#install(FILES<sp/>${LIBXML_HEADERS}<sp/>DESTINATION<sp/>&quot;include/libxml&quot;)</highlight></codeline>
<codeline lineno="294"><highlight class="comment">#</highlight></codeline>
<codeline lineno="295"><highlight class="comment">#</highlight></codeline>
<codeline lineno="296"><highlight class="comment">#</highlight></codeline>
<codeline lineno="297"><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment"></highlight></codeline>
<codeline lineno="300"><highlight class="comment"></highlight></codeline>
<codeline lineno="301"><highlight class="comment"></highlight></codeline>
<codeline lineno="302"><highlight class="comment"></highlight></codeline>
<codeline lineno="303"><highlight class="comment"></highlight></codeline>
<codeline lineno="304"><highlight class="comment"></highlight></codeline>
<codeline lineno="305"><highlight class="comment"></highlight></codeline>
<codeline lineno="306"><highlight class="comment"></highlight></codeline>
<codeline lineno="307"><highlight class="comment"></highlight></codeline>
<codeline lineno="308"><highlight class="comment"></highlight></codeline>
<codeline lineno="309"><highlight class="comment"></highlight></codeline>
<codeline lineno="310"><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment"></highlight></codeline>
<codeline lineno="313"><highlight class="comment"></highlight></codeline>
    </programlisting>
    <location file="src/omexmeta/CMakeLists.txt"/>
  </compounddef>
</doxygen>
