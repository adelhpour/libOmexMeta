<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classomexmeta_1_1Participant" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::Participant</compoundname>
    <derivedcompoundref refid="classomexmeta_1_1MediatorParticipant" prot="public" virt="non-virtual">omexmeta::MediatorParticipant</derivedcompoundref>
    <derivedcompoundref refid="classomexmeta_1_1SinkParticipant" prot="public" virt="non-virtual">omexmeta::SinkParticipant</derivedcompoundref>
    <derivedcompoundref refid="classomexmeta_1_1SourceParticipant" prot="public" virt="non-virtual">omexmeta::SourceParticipant</derivedcompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1Participant_1a978c915388e0105434ac5da3172e2ff9" prot="private" static="no" mutable="no">
        <type>librdf_model *</type>
        <definition>librdf_model* omexmeta::Participant::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="24" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Participant_1aa947afd3fb5d53a7bd2029261f5be45e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::Participant::metaid_template_str_</definition>
        <argsstring></argsstring>
        <name>metaid_template_str_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="25" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Participant_1acc6eb18feca176230dfd107f94a7b0db" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::Participant::semsim_predicate_term_</definition>
        <argsstring></argsstring>
        <name>semsim_predicate_term_</name>
        <briefdescription>
<para>like <ref refid="classomexmeta_1_1SourceParticipant" kindref="compound">SourceParticipant</ref> in SourceParticipant0000 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="26" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Participant_1aba352cbcc6db3a2df58c08d544c8e3bd" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double omexmeta::Participant::multiplier_</definition>
        <argsstring></argsstring>
        <name>multiplier_</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="27" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Participant_1ae0d944207f96c78ccfc0002a7084d861" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::Participant::physicalEntityReference_</definition>
        <argsstring></argsstring>
        <name>physicalEntityReference_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="28" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Participant_1a2573a54059bee6839059fc70db5b353e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::Participant::unique_participant_metaid_</definition>
        <argsstring></argsstring>
        <name>unique_participant_metaid_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="32" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1Participant_1a3c5e24de1d42e00ebf0b9d05fda0bdab" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::Participant::local_uri_</definition>
        <argsstring></argsstring>
        <name>local_uri_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="33" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1Participant_1aee7846dcbb910dd394a0683841ab723a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Participant::setMultiplier</definition>
        <argsstring>(double multiplier)</argsstring>
        <name>setMultiplier</name>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="35" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a415c1205762dff6943426d830d74edcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Participant::setPhysicalEntityReference</definition>
        <argsstring>(const std::string &amp;physicalEntityReference)</argsstring>
        <name>setPhysicalEntityReference</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>physicalEntityReference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="37" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a3caabd03e7cf25d6591419e1ef7ee945" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::Participant::getUniqueParticipantMetaid</definition>
        <argsstring>() const</argsstring>
        <name>getUniqueParticipantMetaid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="39" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a5e8f680950f55230587c0f85498c5047" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Participant::setUniqueParticipantMetaid</definition>
        <argsstring>(const std::string &amp;uniqueParticipantMetaid)</argsstring>
        <name>setUniqueParticipantMetaid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uniqueParticipantMetaid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="41" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a6bf4c724ab5212d10f2a89893f369cd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::Participant::getLocalUri</definition>
        <argsstring>() const</argsstring>
        <name>getLocalUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="43" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a595323ae0681f42a7ba5981e2ee840f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Participant::setLocalUri</definition>
        <argsstring>(const std::string &amp;localUri)</argsstring>
        <name>setLocalUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>localUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="45" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a395bc8d2561149a77371ed80e2ed1517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Participant::free</definition>
        <argsstring>()</argsstring>
        <name>free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="49" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="124" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1ae93c371b174b799709381f1727605ba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Participant::Participant</definition>
        <argsstring>(librdf_model *model, std::string base_metaid, std::string local_uri, std::string semsim_predicate_term, double multiplier, std::string physicalEntityReference)</argsstring>
        <name>Participant</name>
        <param>
          <type>librdf_model *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>base_metaid</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>local_uri</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>semsim_predicate_term</declname>
        </param>
        <param>
          <type>double</type>
          <declname>multiplier</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>physicalEntityReference</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="65" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="13" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a78529cee5b9d5b30d76f937af652d4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::Participant::~Participant</definition>
        <argsstring>()=default</argsstring>
        <name>~Participant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1ad3db317039b403fdb7728885152cbeda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::Participant::operator==</definition>
        <argsstring>(const Participant &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1Participant" kindref="compound">Participant</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="71" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="132" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1aa4baa62cb4ccffe8443262382490328d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool omexmeta::Participant::operator!=</definition>
        <argsstring>(const Participant &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classomexmeta_1_1Participant" kindref="compound">Participant</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="73" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1aefb917ccc60d8652046f5e8abfd44854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1Triples" kindref="compound">Triples</ref></type>
        <definition>Triples omexmeta::Participant::toTriples</definition>
        <argsstring>(std::string process_metaid)</argsstring>
        <name>toTriples</name>
        <param>
          <type>std::string</type>
          <declname>process_metaid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="82" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="32" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a6be40a41c69bdd9c48575e3488d1f8c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::Participant::createMetaid</definition>
        <argsstring>(const std::string &amp;base) const</argsstring>
        <name>createMetaid</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="85" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1aa09f8c5736dd172b03d7898519d9478d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::basic_string&lt; char &gt;</type>
        <definition>std::basic_string&lt; char &gt; omexmeta::Participant::getPredicate</definition>
        <argsstring>()</argsstring>
        <name>getPredicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="92" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a1188d6a2036514eb6b649ce1e08eca4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void omexmeta::Participant::setPredicate</definition>
        <argsstring>(const std::string &amp;semsim_predicate_string)</argsstring>
        <name>setPredicate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>semsim_predicate_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="100" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a232d2e7fe124ee13650d666fdfc3b866" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::Participant::getSubject</definition>
        <argsstring>() const</argsstring>
        <name>getSubject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="107" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a79b467cfc699483fdfe5e7686cc5447e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double omexmeta::Participant::getMultiplier</definition>
        <argsstring>() const</argsstring>
        <name>getMultiplier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="113" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1Participant_1a40a5858db6aaae7ec7095b320de838d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::Participant::getPhysicalEntityReference</definition>
        <argsstring>() const</argsstring>
        <name>getPhysicalEntityReference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/Participant.h" line="119" column="1" bodyfile="src/omexmeta/Participant.cpp" bodystart="120" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="117">
        <label>omexmeta::Participant</label>
        <link refid="classomexmeta_1_1Participant"/>
      </node>
      <node id="120">
        <label>omexmeta::SourceParticipant</label>
        <link refid="classomexmeta_1_1SourceParticipant"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>omexmeta::SinkParticipant</label>
        <link refid="classomexmeta_1_1SinkParticipant"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>omexmeta::MediatorParticipant</label>
        <link refid="classomexmeta_1_1MediatorParticipant"/>
        <childnode refid="117" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="src/omexmeta/Participant.h" line="22" column="1" bodyfile="src/omexmeta/Participant.h" bodystart="22" bodyend="121"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1Participant_1a6be40a41c69bdd9c48575e3488d1f8c8" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>createMetaid</name></member>
      <member refid="classomexmeta_1_1Participant_1a395bc8d2561149a77371ed80e2ed1517" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>free</name></member>
      <member refid="classomexmeta_1_1Participant_1a6bf4c724ab5212d10f2a89893f369cd1" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1Participant_1a79b467cfc699483fdfe5e7686cc5447e" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>getMultiplier</name></member>
      <member refid="classomexmeta_1_1Participant_1a40a5858db6aaae7ec7095b320de838d1" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>getPhysicalEntityReference</name></member>
      <member refid="classomexmeta_1_1Participant_1aa09f8c5736dd172b03d7898519d9478d" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>getPredicate</name></member>
      <member refid="classomexmeta_1_1Participant_1a232d2e7fe124ee13650d666fdfc3b866" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>getSubject</name></member>
      <member refid="classomexmeta_1_1Participant_1a3caabd03e7cf25d6591419e1ef7ee945" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>getUniqueParticipantMetaid</name></member>
      <member refid="classomexmeta_1_1Participant_1a3c5e24de1d42e00ebf0b9d05fda0bdab" prot="private" virt="non-virtual"><scope>omexmeta::Participant</scope><name>local_uri_</name></member>
      <member refid="classomexmeta_1_1Participant_1aa947afd3fb5d53a7bd2029261f5be45e" prot="private" virt="non-virtual"><scope>omexmeta::Participant</scope><name>metaid_template_str_</name></member>
      <member refid="classomexmeta_1_1Participant_1a978c915388e0105434ac5da3172e2ff9" prot="private" virt="non-virtual"><scope>omexmeta::Participant</scope><name>model_</name></member>
      <member refid="classomexmeta_1_1Participant_1aba352cbcc6db3a2df58c08d544c8e3bd" prot="private" virt="non-virtual"><scope>omexmeta::Participant</scope><name>multiplier_</name></member>
      <member refid="classomexmeta_1_1Participant_1aa4baa62cb4ccffe8443262382490328d" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>operator!=</name></member>
      <member refid="classomexmeta_1_1Participant_1ad3db317039b403fdb7728885152cbeda" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>operator==</name></member>
      <member refid="classomexmeta_1_1Participant_1ae93c371b174b799709381f1727605ba6" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>Participant</name></member>
      <member refid="classomexmeta_1_1Participant_1ae0d944207f96c78ccfc0002a7084d861" prot="private" virt="non-virtual"><scope>omexmeta::Participant</scope><name>physicalEntityReference_</name></member>
      <member refid="classomexmeta_1_1Participant_1acc6eb18feca176230dfd107f94a7b0db" prot="private" virt="non-virtual"><scope>omexmeta::Participant</scope><name>semsim_predicate_term_</name></member>
      <member refid="classomexmeta_1_1Participant_1a595323ae0681f42a7ba5981e2ee840f1" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>setLocalUri</name></member>
      <member refid="classomexmeta_1_1Participant_1aee7846dcbb910dd394a0683841ab723a" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>setMultiplier</name></member>
      <member refid="classomexmeta_1_1Participant_1a415c1205762dff6943426d830d74edcd" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>setPhysicalEntityReference</name></member>
      <member refid="classomexmeta_1_1Participant_1a1188d6a2036514eb6b649ce1e08eca4d" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>setPredicate</name></member>
      <member refid="classomexmeta_1_1Participant_1a5e8f680950f55230587c0f85498c5047" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>setUniqueParticipantMetaid</name></member>
      <member refid="classomexmeta_1_1Participant_1aefb917ccc60d8652046f5e8abfd44854" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>toTriples</name></member>
      <member refid="classomexmeta_1_1Participant_1a2573a54059bee6839059fc70db5b353e" prot="private" virt="non-virtual"><scope>omexmeta::Participant</scope><name>unique_participant_metaid_</name></member>
      <member refid="classomexmeta_1_1Participant_1a78529cee5b9d5b30d76f937af652d4f0" prot="public" virt="non-virtual"><scope>omexmeta::Participant</scope><name>~Participant</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
