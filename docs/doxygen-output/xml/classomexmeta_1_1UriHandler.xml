<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classomexmeta_1_1UriHandler" kind="class" language="C++" prot="public">
    <compoundname>omexmeta::UriHandler</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1a7314e819a6df8473af060e8386c5ca28" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::repository_uri_</definition>
        <argsstring></argsstring>
        <name>repository_uri_</name>
        <initializer>= &quot;http://omex-library.org/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="122" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1acba5cabedaa526c1c750f8e483c7462d" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::archive_uri_</definition>
        <argsstring></argsstring>
        <name>archive_uri_</name>
        <initializer>= repository_uri_ + &quot;NewOmex.omex/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="123" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1ac7572c260f85d710c0f70a1f1ceeefed" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::model_uri_</definition>
        <argsstring></argsstring>
        <name>model_uri_</name>
        <initializer>= archive_uri_ + &quot;NewModel.xml&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="124" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classomexmeta_1_1UriHandler_1abf8134e01008621ea4d5ef840853c82c" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::local_uri_</definition>
        <argsstring></argsstring>
        <name>local_uri_</name>
        <initializer>= archive_uri_ + &quot;NewModel.rdf#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="125" column="21" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a3fc8f7022dc611dbbed4d9994a937de7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>omexmeta::UriHandler::UriHandler</definition>
        <argsstring>()=default</argsstring>
        <name>UriHandler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="21" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1aebddd11d7594e355d8b60153e380144f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getRepositoryUri</definition>
        <argsstring>() const</argsstring>
        <name>getRepositoryUri</name>
        <briefdescription>
<para>getter for repository uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is &quot;http://omex-library.org/&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="27" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1af31f643e5ef458a3031112f2854f2f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::UriHandler::setRepositoryUri</definition>
        <argsstring>(const std::string &amp;repository)</argsstring>
        <name>setRepositoryUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>repository</declname>
        </param>
        <briefdescription>
<para>setter for repository uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is &quot;http://omex-library.org/&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="33" column="20" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="15" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a97718b9b1e91fe2efec0b3f17d63665d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getArchiveUri</definition>
        <argsstring>() const</argsstring>
        <name>getArchiveUri</name>
        <briefdescription>
<para>getter for archive uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewOmex.omex&quot; which produces the full uri &quot;http://omex-library.org/NewOmex.omex/&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="41" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1abaa9bf90c2d8c7daf9d8f8fad6188a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::UriHandler::setArchiveUri</definition>
        <argsstring>(const std::string &amp;archive)</argsstring>
        <name>setArchiveUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>archive</declname>
        </param>
        <briefdescription>
<para>setter for archive uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewOmex.omex&quot; which produces the full uri &quot;http://omex-library.org/NewOmex.omex/&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="49" column="20" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="36" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a67f7dfa35576a487940dd5072ea625d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getModelUri</definition>
        <argsstring>() const</argsstring>
        <name>getModelUri</name>
        <briefdescription>
<para>getter for model uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewModel.xml&quot; and produces the full uri &quot;http://omex-library.org/NewOmex.omex/NewModel.xml#&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="57" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a6bb9006061d7ce7480700987ed9e1918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classomexmeta_1_1UriHandler" kindref="compound">UriHandler</ref> &amp;</type>
        <definition>UriHandler &amp; omexmeta::UriHandler::setModelUri</definition>
        <argsstring>(std::string model)</argsstring>
        <name>setModelUri</name>
        <param>
          <type>std::string</type>
          <declname>model</declname>
        </param>
        <briefdescription>
<para>setter for model uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewModel.xml&quot; and produces the full uri &quot;http://omex-library.org/NewOmex.omex/NewModel.xml#&quot; when assembled </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="65" column="20" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="67" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a14e40e77ef67711ba1afca4e15428c02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; omexmeta::UriHandler::getLocalUri</definition>
        <argsstring>() const</argsstring>
        <name>getLocalUri</name>
        <briefdescription>
<para>getter for local uri. </para>
        </briefdescription>
        <detaileddescription>
<para>default is&quot;NewModel.rdf&quot; and produces the full uri &quot;http://omex-library.org/NewOmex.omex/NewModel.rdf#&quot; when assembled. There is no setter for local_uri_ because it&apos;ll take on the name of model_uri_ with the &quot;xml&quot; extension replaced with &quot;rdf&quot; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="75" column="28" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1ad30de26a22a4e9bfd0417cc19c7c67cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string omexmeta::UriHandler::uriModifier</definition>
        <argsstring>(std::string uri_to_modify, eUriType type) const</argsstring>
        <name>uriModifier</name>
        <param>
          <type>std::string</type>
          <declname>uri_to_modify</declname>
        </param>
        <param>
          <type>eUriType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="77" column="22" bodyfile="src/omexmeta/UriHandler.cpp" bodystart="134" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classomexmeta_1_1UriHandler_1a9cde7e91ac8c45800decd9263a853f74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>static std::string omexmeta::UriHandler::uriModifier</definition>
        <argsstring>(T &amp;cls, std::string uri_to_modify, eUriType type)</argsstring>
        <name>uriModifier</name>
        <param>
          <type>T &amp;</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>uri_to_modify</declname>
        </param>
        <param>
          <type>eUriType</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="80" column="28" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="80" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/omexmeta/include/omexmeta/UriHandler.h" line="19" column="5" bodyfile="src/omexmeta/include/omexmeta/UriHandler.h" bodystart="19" bodyend="126"/>
    <listofallmembers>
      <member refid="classomexmeta_1_1UriHandler_1acba5cabedaa526c1c750f8e483c7462d" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>archive_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a97718b9b1e91fe2efec0b3f17d63665d" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getArchiveUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a14e40e77ef67711ba1afca4e15428c02" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getLocalUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a67f7dfa35576a487940dd5072ea625d2" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getModelUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1aebddd11d7594e355d8b60153e380144f" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>getRepositoryUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1abf8134e01008621ea4d5ef840853c82c" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>local_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1ac7572c260f85d710c0f70a1f1ceeefed" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>model_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a7314e819a6df8473af060e8386c5ca28" prot="private" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>repository_uri_</name></member>
      <member refid="classomexmeta_1_1UriHandler_1abaa9bf90c2d8c7daf9d8f8fad6188a4e" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>setArchiveUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a6bb9006061d7ce7480700987ed9e1918" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>setModelUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1af31f643e5ef458a3031112f2854f2f1d" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>setRepositoryUri</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a3fc8f7022dc611dbbed4d9994a937de7" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>UriHandler</name></member>
      <member refid="classomexmeta_1_1UriHandler_1ad30de26a22a4e9bfd0417cc19c7c67cc" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>uriModifier</name></member>
      <member refid="classomexmeta_1_1UriHandler_1a9cde7e91ac8c45800decd9263a853f74" prot="public" virt="non-virtual"><scope>omexmeta::UriHandler</scope><name>uriModifier</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
