<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classredland_1_1LibrdfNode" kind="class" language="C++" prot="public">
    <compoundname>redland::LibrdfNode</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classredland_1_1LibrdfNode_1ab9968deae2b43d5b77de4227960db0b0" prot="private" static="no" mutable="no">
        <type><ref refid="structraptor__term" kindref="compound">librdf_node</ref> *</type>
        <definition>librdf_node* redland::LibrdfNode::node_</definition>
        <argsstring></argsstring>
        <name>node_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="157" column="21" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a0f6b28fba74ab6ff25de32c725d499e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfNode::LibrdfNode</definition>
        <argsstring>()=default</argsstring>
        <name>LibrdfNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="52" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1acfe3ae9d7b0f311da59f66e014cfbdec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfNode::~LibrdfNode</definition>
        <argsstring>()</argsstring>
        <name>~LibrdfNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="54" column="9" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="15" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a6bca38d88eb20f9f6b29e9f32848fb5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfNode::LibrdfNode</definition>
        <argsstring>(const LibrdfNode &amp;node)</argsstring>
        <name>LibrdfNode</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="56" column="9" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a822ce6a4221315abe5768b278b83d0e5" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfNode::LibrdfNode</definition>
        <argsstring>(LibrdfNode &amp;&amp;node) noexcept</argsstring>
        <name>LibrdfNode</name>
        <param>
          <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;&amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="58" column="9" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="40" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a01b8ce0f193e277ccb914b460b1c275c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
        <definition>LibrdfNode &amp; redland::LibrdfNode::operator=</definition>
        <argsstring>(const LibrdfNode &amp;node)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="60" column="20" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="29" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a9de3a69b00958b2bb50646dbf0aa8d7e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
        <definition>LibrdfNode &amp; redland::LibrdfNode::operator=</definition>
        <argsstring>(LibrdfNode &amp;&amp;node) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;&amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="62" column="20" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="50" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1afc1bdf57705253e8204a394541b96ca7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfNode::operator==</definition>
        <argsstring>(const LibrdfNode &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="64" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="348" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1aefbf9e2bf34eb0171932e39323eadfd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfNode::operator!=</definition>
        <argsstring>(const LibrdfNode &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="66" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="352" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a28f6ce060bddf7e1cb88d17d4d4ea81a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void redland::LibrdfNode::freeNode</definition>
        <argsstring>()</argsstring>
        <name>freeNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="68" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="329" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a200c7a67088e66d6fc73f52bdb51d2e9" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfNode::LibrdfNode</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>LibrdfNode</name>
        <param>
          <type><ref refid="structraptor__term" kindref="compound">librdf_node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="71" column="18" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="63" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a0662461585aba94581be80247d9bd917" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfNode::LibrdfNode</definition>
        <argsstring>(const LibrdfUri &amp;uri)</argsstring>
        <name>LibrdfNode</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="73" column="18" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="66" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a33162ea36efe451c100325816cf8613f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structraptor__term" kindref="compound">librdf_node</ref> *</type>
        <definition>librdf_node * redland::LibrdfNode::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>return pointer to underlying librdf_node pointer </para>
        </briefdescription>
        <detaileddescription>
<para>using this method increments the librdf_node* usage count by 1. The caller is responsible for decrementing the usage count. <simplesect kind="see"><para><ref refid="classredland_1_1LibrdfNode_1a6dd134798082dbee9fb5601752609981" kindref="member">getUsage()</ref> </para>
</simplesect>
<simplesect kind="note"><para>the librdf_statement takes shared ownership of a node when passed to librdf_new_statement. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="83" column="22" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a0bd36d9a9140a98753bb1d35ff8c1695" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structraptor__term" kindref="compound">librdf_node</ref> *</type>
        <definition>librdf_node * redland::LibrdfNode::getWithoutIncrement</definition>
        <argsstring>() const</argsstring>
        <name>getWithoutIncrement</name>
        <briefdescription>
<para>get the underlying librdf_node* </para>
        </briefdescription>
        <detaileddescription>
<para>do not increment the shared pointer reference counter. <simplesect kind="warning"><para>this method assumes you know what you are doing with regards to the librdf reference counting system </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classredland_1_1LibrdfNode_1a33162ea36efe451c100325816cf8613f" kindref="member">LibrdfNode::get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="93" column="22" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="237" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a83ec604f27e71cea80ac49569a06ddfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>raptor_term_type</type>
        <definition>raptor_term_type redland::LibrdfNode::getRaptorTermType</definition>
        <argsstring>()</argsstring>
        <name>getRaptorTermType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="112" column="26" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a535fbe1bc21ca9cd9b39b969bfd2e500" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfNode::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="116" column="22" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="344" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a98487d5af58971d820fcb99c88d8712d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfNode::getLiteralDatatype</definition>
        <argsstring>()</argsstring>
        <name>getLiteralDatatype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="118" column="19" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="242" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a58b9962c783be77fd0d2cb7036bfdc6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfNode::getLiteralLanguage</definition>
        <argsstring>()</argsstring>
        <name>getLiteralLanguage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="120" column="21" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="248" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a49431de8c3262ee56d533a5fe047ee00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfNode::getBlankIdentifier</definition>
        <argsstring>()</argsstring>
        <name>getBlankIdentifier</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="122" column="21" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="255" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a0dd2ff697c0753eddf7327f64390ed77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfNode::getUri</definition>
        <argsstring>()</argsstring>
        <name>getUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="124" column="19" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="259" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a01aeb7675187379674746f803a1fbdc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void redland::LibrdfNode::setUri</definition>
        <argsstring>(const std::string &amp;uri)</argsstring>
        <name>setUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="126" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="265" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a160db9f7c7636c339e12c26f519b8fff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void redland::LibrdfNode::setLiteralDatatype</definition>
        <argsstring>(const std::string &amp;datatype)</argsstring>
        <name>setLiteralDatatype</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>datatype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="128" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="282" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1afd81499fe4125cc2f4c472d33fb6c8c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void redland::LibrdfNode::setBlankIdentifier</definition>
        <argsstring>(const std::string &amp;identifier)</argsstring>
        <name>setBlankIdentifier</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>identifier</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="132" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="315" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a43ba1bed3f1cc6ed654a16c570598565" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfNode::getNamespace</definition>
        <argsstring>() const</argsstring>
        <name>getNamespace</name>
        <briefdescription>
<para>get namespace portion of the node. I.e. all but last section of the uri </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="144" column="21" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="376" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a6dd134798082dbee9fb5601752609981" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int redland::LibrdfNode::getUsage</definition>
        <argsstring>() const</argsstring>
        <name>getUsage</name>
        <briefdescription>
<para>returns the usage of the underlying librdf_node pointer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="151" column="23" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="402" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a21d7aff6813bf11d13057f4dab8bbef7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void redland::LibrdfNode::incrementUsageCount</definition>
        <argsstring>()</argsstring>
        <name>incrementUsageCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="153" column="15" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="406" bodyend="408"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1aacf853ee60f9d706bc7e95fb426166bd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
        <definition>LibrdfNode redland::LibrdfNode::fromUriString</definition>
        <argsstring>(const std::string &amp;uri_string)</argsstring>
        <name>fromUriString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="95" column="27" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="71" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a22ea96262be432e6abb5c1e28ede3071" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
        <definition>LibrdfNode redland::LibrdfNode::fromBlank</definition>
        <argsstring>(const std::string &amp;blank)</argsstring>
        <name>fromBlank</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>blank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="97" column="27" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a96a685f8e79ba04c91a15e024a66388f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
        <definition>LibrdfNode redland::LibrdfNode::fromLiteral</definition>
        <argsstring>(const std::string &amp;literal, const std::string &amp;literal_datatype_uri=&quot;&quot;, const std::string &amp;xml_language=std::string())</argsstring>
        <name>fromLiteral</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>literal</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>literal_datatype_uri</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>xml_language</declname>
          <defval>std::string()</defval>
        </param>
        <briefdescription>
<para>construct a literal node </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>literal</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to use for literal node </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>literal_datatype_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>defaults to &quot;&quot;, i.e. no defined datatype. Users can use any datatype from the RDF specification and users do not need to pass the full URI. For example, to specify a datatype was a string you only need to use &quot;string&quot; for this argument. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xml_language</parametername>
</parameternamelist>
<parameterdescription>
<para>The language for this literal. See RDF specification for more details. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="107" column="27" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="168" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1aaeeeca26bafdaf7f118af3307a4768be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
        <definition>LibrdfNode redland::LibrdfNode::newEmptyNode</definition>
        <argsstring>()</argsstring>
        <name>newEmptyNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="110" column="27" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1aa6bf7e25e68e473f2f39cb7b4cb5f39b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfNode::str</definition>
        <argsstring>(librdf_node *node)</argsstring>
        <name>str</name>
        <param>
          <type><ref refid="structraptor__term" kindref="compound">librdf_node</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="114" column="28" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="204" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a3242e29edb736ba0aa8ac42fd6b3ae58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfNode::validateLiteralDatatype</definition>
        <argsstring>(const std::string &amp;literal_datatype_uri)</argsstring>
        <name>validateLiteralDatatype</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>literal_datatype_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="130" column="28" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="150" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a46208d163a49bc7640a8b4c847e2a28b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
        <definition>LibrdfNode redland::LibrdfNode::copyNode</definition>
        <argsstring>(const LibrdfNode &amp;node)</argsstring>
        <name>copyNode</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref> &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="137" column="27" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="356" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a872032a7516dd140f93a9f4af3e0abd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfNode" kindref="compound">LibrdfNode</ref></type>
        <definition>LibrdfNode redland::LibrdfNode::fromRelativeUri</definition>
        <argsstring>(const std::string &amp;uri_string, const std::string &amp;base_uri)</argsstring>
        <name>fromRelativeUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>base_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="139" column="27" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="138" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfNode_1a56623e9b231d824ad34d43d9a3994df7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; redland::LibrdfNode::splitStringBy</definition>
        <argsstring>(const std::string &amp;str, char delimiter)</argsstring>
        <name>splitStringBy</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>delimiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="146" column="28" bodyfile="src/redland/RedlandWrapper/src/LibrdfNode.cpp" bodystart="360" bodyend="374"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" line="49" column="5" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfNode.h" bodystart="49" bodyend="158"/>
    <listofallmembers>
      <member refid="classredland_1_1LibrdfNode_1a46208d163a49bc7640a8b4c847e2a28b" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>copyNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1a28f6ce060bddf7e1cb88d17d4d4ea81a" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>freeNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1a22ea96262be432e6abb5c1e28ede3071" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>fromBlank</name></member>
      <member refid="classredland_1_1LibrdfNode_1a96a685f8e79ba04c91a15e024a66388f" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>fromLiteral</name></member>
      <member refid="classredland_1_1LibrdfNode_1a872032a7516dd140f93a9f4af3e0abd9" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>fromRelativeUri</name></member>
      <member refid="classredland_1_1LibrdfNode_1aacf853ee60f9d706bc7e95fb426166bd" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>fromUriString</name></member>
      <member refid="classredland_1_1LibrdfNode_1a33162ea36efe451c100325816cf8613f" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>get</name></member>
      <member refid="classredland_1_1LibrdfNode_1a49431de8c3262ee56d533a5fe047ee00" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getBlankIdentifier</name></member>
      <member refid="classredland_1_1LibrdfNode_1a98487d5af58971d820fcb99c88d8712d" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getLiteralDatatype</name></member>
      <member refid="classredland_1_1LibrdfNode_1a58b9962c783be77fd0d2cb7036bfdc6a" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getLiteralLanguage</name></member>
      <member refid="classredland_1_1LibrdfNode_1a43ba1bed3f1cc6ed654a16c570598565" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getNamespace</name></member>
      <member refid="classredland_1_1LibrdfNode_1a83ec604f27e71cea80ac49569a06ddfe" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getRaptorTermType</name></member>
      <member refid="classredland_1_1LibrdfNode_1a0dd2ff697c0753eddf7327f64390ed77" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getUri</name></member>
      <member refid="classredland_1_1LibrdfNode_1a6dd134798082dbee9fb5601752609981" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getUsage</name></member>
      <member refid="classredland_1_1LibrdfNode_1a0bd36d9a9140a98753bb1d35ff8c1695" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>getWithoutIncrement</name></member>
      <member refid="classredland_1_1LibrdfNode_1a21d7aff6813bf11d13057f4dab8bbef7" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>incrementUsageCount</name></member>
      <member refid="classredland_1_1LibrdfNode_1a0f6b28fba74ab6ff25de32c725d499e9" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>LibrdfNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1a6bca38d88eb20f9f6b29e9f32848fb5b" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>LibrdfNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1a822ce6a4221315abe5768b278b83d0e5" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>LibrdfNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1a200c7a67088e66d6fc73f52bdb51d2e9" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>LibrdfNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1a0662461585aba94581be80247d9bd917" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>LibrdfNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1aaeeeca26bafdaf7f118af3307a4768be" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>newEmptyNode</name></member>
      <member refid="classredland_1_1LibrdfNode_1ab9968deae2b43d5b77de4227960db0b0" prot="private" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>node_</name></member>
      <member refid="classredland_1_1LibrdfNode_1aefbf9e2bf34eb0171932e39323eadfd8" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>operator!=</name></member>
      <member refid="classredland_1_1LibrdfNode_1a01b8ce0f193e277ccb914b460b1c275c" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>operator=</name></member>
      <member refid="classredland_1_1LibrdfNode_1a9de3a69b00958b2bb50646dbf0aa8d7e" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>operator=</name></member>
      <member refid="classredland_1_1LibrdfNode_1afc1bdf57705253e8204a394541b96ca7" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>operator==</name></member>
      <member refid="classredland_1_1LibrdfNode_1afd81499fe4125cc2f4c472d33fb6c8c0" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>setBlankIdentifier</name></member>
      <member refid="classredland_1_1LibrdfNode_1a160db9f7c7636c339e12c26f519b8fff" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>setLiteralDatatype</name></member>
      <member refid="classredland_1_1LibrdfNode_1a01aeb7675187379674746f803a1fbdc9" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>setUri</name></member>
      <member refid="classredland_1_1LibrdfNode_1a56623e9b231d824ad34d43d9a3994df7" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>splitStringBy</name></member>
      <member refid="classredland_1_1LibrdfNode_1aa6bf7e25e68e473f2f39cb7b4cb5f39b" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>str</name></member>
      <member refid="classredland_1_1LibrdfNode_1a535fbe1bc21ca9cd9b39b969bfd2e500" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>str</name></member>
      <member refid="classredland_1_1LibrdfNode_1a3242e29edb736ba0aa8ac42fd6b3ae58" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>validateLiteralDatatype</name></member>
      <member refid="classredland_1_1LibrdfNode_1acfe3ae9d7b0f311da59f66e014cfbdec" prot="public" virt="non-virtual"><scope>redland::LibrdfNode</scope><name>~LibrdfNode</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
