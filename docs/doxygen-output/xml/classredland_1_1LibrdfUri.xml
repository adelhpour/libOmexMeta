<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classredland_1_1LibrdfUri" kind="class" language="C++" prot="public">
    <compoundname>redland::LibrdfUri</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classredland_1_1LibrdfUri_1a63db4550be5d92576b6ff6de78563483" prot="private" static="no" mutable="no">
        <type>librdf_uri *</type>
        <definition>librdf_uri* redland::LibrdfUri::uri_</definition>
        <argsstring></argsstring>
        <name>uri_</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="136" column="20" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1ae178bed8994fa2b3e32c1ad97a45e67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>()=default</argsstring>
        <name>LibrdfUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="19" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a187a01fa75ec171fdfd9c9578723296f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::~LibrdfUri</definition>
        <argsstring>()</argsstring>
        <name>~LibrdfUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="21" column="9" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1afb311a21a7de7319c72fc1d27aaacbbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>(const LibrdfUri &amp;librdfUri)</argsstring>
        <name>LibrdfUri</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
          <declname>librdfUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="23" column="9" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="18" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1aecb54f52a078bf61a64caff6b1fa198b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>(LibrdfUri &amp;&amp;librdfUri) noexcept</argsstring>
        <name>LibrdfUri</name>
        <param>
          <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;&amp;</type>
          <declname>librdfUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="25" column="9" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1ae0a39124aee33ef75ced69587db7bef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
        <definition>LibrdfUri &amp; redland::LibrdfUri::operator=</definition>
        <argsstring>(const LibrdfUri &amp;librdfUri)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
          <declname>librdfUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="27" column="19" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a26a0edd47c99853694a46c3382884514" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
        <definition>LibrdfUri &amp; redland::LibrdfUri::operator=</definition>
        <argsstring>(LibrdfUri &amp;&amp;librdfUri) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;&amp;</type>
          <declname>librdfUri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="29" column="19" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="46" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a3630cf904c9e4546fb6d6c175ed6c66e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfUri::concatonate</definition>
        <argsstring>(const std::string &amp;local_name) const</argsstring>
        <name>concatonate</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>local_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="79" column="20" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1acaeb8a0d4b6f493805ecc1b198807e1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfUri::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="81" column="22" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="74" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a36c5c589ae207ad6294e10be2bb8df17" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>(const std::string &amp;uri)</argsstring>
        <name>LibrdfUri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="83" column="18" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a1858bf7c3afae7d6d8ed2dca47e9cf55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>librdf_uri *</type>
        <definition>librdf_uri * redland::LibrdfUri::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>returns a librdf_uri pointer and increments the usage count. The caller is responsible for calling </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>freeUri to decrement the librdf_uri* again. </para>
</simplesect>
<simplesect kind="note"><para>when </para>
</simplesect>
<simplesect kind="see"><para>getUsage() is 1 the destructor will take care of freeing memory associated with librdf_uri object. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="93" column="21" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a2c4744e82ffb6b03bdfb48c1a4327b59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>librdf_uri *</type>
        <definition>librdf_uri * redland::LibrdfUri::getWithoutIncrement</definition>
        <argsstring>() const</argsstring>
        <name>getWithoutIncrement</name>
        <briefdescription>
<para>get the underlying librdf_uri* </para>
        </briefdescription>
        <detaileddescription>
<para>do not increment the shared pointer reference counter. <simplesect kind="warning"><para>this method assumes you know what you are doing with regards to the librdf reference counting system </para>
</simplesect>
<simplesect kind="see"><para><ref refid="classredland_1_1LibrdfUri_1a1858bf7c3afae7d6d8ed2dca47e9cf55" kindref="member">LibrdfUri::get()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="103" column="21" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a13f1a7bc775cd79b6bb4dc6cd31b5d53" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="105" column="15" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1aa07e6315dc3428b6d864deb00cda48e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void redland::LibrdfUri::freeUri</definition>
        <argsstring>()</argsstring>
        <name>freeUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="107" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="100" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a770d47b63c041e39761f8dd46b0bf8b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::isFileUri</definition>
        <argsstring>() const</argsstring>
        <name>isFileUri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="114" column="15" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a02d802c21de7c9dba4133779701e3a45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::operator==</definition>
        <argsstring>(const LibrdfUri &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="116" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="145" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a8ded118526be9cfdbe6dbc87d075fb06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool redland::LibrdfUri::operator!=</definition>
        <argsstring>(const LibrdfUri &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="118" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1ad24448f9b22adce080a35decc4694479" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string redland::LibrdfUri::toFilenameString</definition>
        <argsstring>() const</argsstring>
        <name>toFilenameString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="124" column="22" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="135" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a77105fe3bed8bced2001bfee738f7032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int redland::LibrdfUri::getUsage</definition>
        <argsstring>()</argsstring>
        <name>getUsage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="126" column="13" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a220ac88021038a9ad710ccfc1ff423cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void redland::LibrdfUri::incrementUsage</definition>
        <argsstring>() const</argsstring>
        <name>incrementUsage</name>
        <briefdescription>
<para>adds 1 to the usage count for underlying reference counter in librdf_uri* </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="133" column="14" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a518761e1fbfd8c2f79dcac01b05c720b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfUri::fromRawPtr</definition>
        <argsstring>(librdf_uri *uri)</argsstring>
        <name>fromRawPtr</name>
        <param>
          <type>librdf_uri *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="37" column="26" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1ad7245bf32a2538d220ec7d3a0afc0802" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfUri::fromFilename</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>fromFilename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="49" column="26" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a58ab2ce202cc9b563d1dc60a20a545b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classredland_1_1LibrdfUri" kindref="compound">LibrdfUri</ref></type>
        <definition>LibrdfUri redland::LibrdfUri::concatonate</definition>
        <argsstring>(librdf_uri *old_name, const std::string &amp;local_name)</argsstring>
        <name>concatonate</name>
        <param>
          <type>librdf_uri *</type>
          <declname>old_name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>local_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="63" column="26" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classredland_1_1LibrdfUri_1a4992fcae8de6b2814b6c9061f8f3d5b8" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>redland::LibrdfUri::LibrdfUri</definition>
        <argsstring>(librdf_uri *uri)</argsstring>
        <name>LibrdfUri</name>
        <param>
          <type>librdf_uri *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="141" column="18" bodyfile="src/redland/RedlandWrapper/src/LibrdfUri.cpp" bodystart="67" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" line="16" column="5" bodyfile="src/redland/RedlandWrapper/src/include/redland/LibrdfUri.h" bodystart="16" bodyend="142"/>
    <listofallmembers>
      <member refid="classredland_1_1LibrdfUri_1a58ab2ce202cc9b563d1dc60a20a545b2" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>concatonate</name></member>
      <member refid="classredland_1_1LibrdfUri_1a3630cf904c9e4546fb6d6c175ed6c66e" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>concatonate</name></member>
      <member refid="classredland_1_1LibrdfUri_1aa07e6315dc3428b6d864deb00cda48e1" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>freeUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1ad7245bf32a2538d220ec7d3a0afc0802" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>fromFilename</name></member>
      <member refid="classredland_1_1LibrdfUri_1a518761e1fbfd8c2f79dcac01b05c720b" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>fromRawPtr</name></member>
      <member refid="classredland_1_1LibrdfUri_1a1858bf7c3afae7d6d8ed2dca47e9cf55" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>get</name></member>
      <member refid="classredland_1_1LibrdfUri_1a77105fe3bed8bced2001bfee738f7032" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>getUsage</name></member>
      <member refid="classredland_1_1LibrdfUri_1a2c4744e82ffb6b03bdfb48c1a4327b59" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>getWithoutIncrement</name></member>
      <member refid="classredland_1_1LibrdfUri_1a220ac88021038a9ad710ccfc1ff423cf" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>incrementUsage</name></member>
      <member refid="classredland_1_1LibrdfUri_1a13f1a7bc775cd79b6bb4dc6cd31b5d53" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>isEmpty</name></member>
      <member refid="classredland_1_1LibrdfUri_1a770d47b63c041e39761f8dd46b0bf8b5" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>isFileUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1ae178bed8994fa2b3e32c1ad97a45e67d" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1afb311a21a7de7319c72fc1d27aaacbbd" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1aecb54f52a078bf61a64caff6b1fa198b" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1a36c5c589ae207ad6294e10be2bb8df17" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1a4992fcae8de6b2814b6c9061f8f3d5b8" prot="private" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>LibrdfUri</name></member>
      <member refid="classredland_1_1LibrdfUri_1a8ded118526be9cfdbe6dbc87d075fb06" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator!=</name></member>
      <member refid="classredland_1_1LibrdfUri_1ae0a39124aee33ef75ced69587db7bef9" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator=</name></member>
      <member refid="classredland_1_1LibrdfUri_1a26a0edd47c99853694a46c3382884514" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator=</name></member>
      <member refid="classredland_1_1LibrdfUri_1a02d802c21de7c9dba4133779701e3a45" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>operator==</name></member>
      <member refid="classredland_1_1LibrdfUri_1acaeb8a0d4b6f493805ecc1b198807e1c" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>str</name></member>
      <member refid="classredland_1_1LibrdfUri_1ad24448f9b22adce080a35decc4694479" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>toFilenameString</name></member>
      <member refid="classredland_1_1LibrdfUri_1a63db4550be5d92576b6ff6de78563483" prot="private" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>uri_</name></member>
      <member refid="classredland_1_1LibrdfUri_1a187a01fa75ec171fdfd9c9578723296f" prot="public" virt="non-virtual"><scope>redland::LibrdfUri</scope><name>~LibrdfUri</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
