Reading and Writing RDF
=======================

Reading RDF graphs revolves around the `from*` and `add_from*` methods,
where the wildcard `*` is one of `string`, `url` or `filename`. The `from*`
methods are static and create a new `RDF` graph while the `add_from*` methods add to the
existing `RDF` graph.

Reading from a string
---------------------

.. code-block:: python

    from pyomexmeta import RDF
    rdf_str = """<?xml version="1.0" encoding="utf-8"?>
    <rdf:RDF xmlns:bqbiol="http://biomodels.net/biology-qualifiers/"
       xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xml:base="file://./Annotations.rdf">
      <rdf:Description rdf:about="OmexMetaId0000">
        <bqbiol:is rdf:resource="https://identifiers.org/uniprot/PD12345"/>
      </rdf:Description>
    </rdf:RDF>"""

    rdf = RDF.from_string(rdf_str)

Adding to an existing graph from a string
-----------------------------------------

.. code-block:: python

    from pyomexmeta import RDF
    rdf_str = """<?xml version="1.0" encoding="utf-8"?>
    <rdf:RDF xmlns:bqbiol="http://biomodels.net/biology-qualifiers/"
       xmlns:bqmodel="http://biomodels.net/model-qualifiers/"
       xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
       xmlns:semsim="http://www.bhi.washington.edu/semsim#"
       xml:base="file://./annotations.rdf">
      <rdf:Description rdf:about="force_0">
        <semsim:hasSinkParticipant rdf:resource="sink_0"/>
        <semsim:hasSourceParticipant rdf:resource="source_0"/>
      </rdf:Description>
      <rdf:Description rdf:about="parameter_metaid_0">
        <bqbiol:isPropertyOf rdf:resource="force_0"/>
        <bqbiol:isVersionOf rdf:resource="https://identifiers.org/opb/OPB_01058"/>
      </rdf:Description>
      <rdf:Description rdf:about="sink_0">
        <semsim:hasPhysicalEntityReference rdf:resource="species_metaid_1"/>
      </rdf:Description>
      <rdf:Description rdf:about="source_0">
        <semsim:hasPhysicalEntityReference rdf:resource="species_metaid_0"/>
      </rdf:Description>
    </rdf:RDF>"""

    rdf = RDF.from_string(rdf_str, format="rdfxml")

    # The default parser is called "guess" which will try to automatically
    # figure out which parser to use.
    rdf2 = RDF.from_string(rdf_str, format="guess")


    rdf_turtle_str = '''
    @base <file://./annotations.rdf> .
    @prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
    @prefix bqbiol: <http://biomodels.net/biology-qualifiers/> .
    \n"
    <metaid_1>\n"
    bqbiol:is <https://identifiers.org/uniprot/P0DP23> .
    '''





