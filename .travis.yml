language: cpp
compiler:
  - gcc
sudo: false
dist: bionic
cache:
  directories:
    - ${HOME}/vcpkg
#git:
#  clone: false
branches:
  only:
  - master
  - develop
before_install:
  - echo "TRAVIS_BUILD_DIR $TRAVIS_BUILD_DIR ${TRAVIS_BUILD_DIR}"
  - echo ${TRAVIS_BUILD_DIR}
  - echo $TRAVIS_BUILD_DIR
  - sudo apt-get update
  - cd ${HOME}
  - DEBIAN_FRONTEND=noninteractive
  - sudo apt-get install -y wget lsb-release binutils software-properties-common
  - wget https://github.com/Kitware/CMake/releases/download/v3.15.7/cmake-3.15.7-Linux-x86_64.tar.gz
    && tar -xvf cmake-3.15.7-Linux-x86_64.tar.gz
  - if [ ! -d "${HOME}/vcpkg" ]; then git clone https://github.com/microsoft/vcpkg.git
    && bash ${HOME}/vcpkg/bootstrap-vcpkg.sh
    && ${HOME}/vcpkg/vcpkg integrate install
    && ${HOME}/vcpkg/vcpkg install libxml2 curl libiconv pcre openssl yajl libpq sqlite3
    ; fi
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update
  - mkdir ~/.conda
  - bash Miniconda3-latest-Linux-x86_64.sh -b
  - ls
  - PATH=~/miniconda3/bin:$PATH
  - sudo apt-get install -y sqlite3 libsqlite3-dev libxml2 libxml2-dev
    libxslt1-dev postgresql postgresql-contrib libdb-dev
    libdb-dev gcc-10 g++-10 gcc-9 g++-9 flex bison doxygen python3-sphinx libldap-dev
    libpthread-stubs0-dev libltdl-dev git slapd ldap-utils graphviz
    && sudo apt-get install -y curl unzip tar
    && sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9  100
    && sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 100
    && sudo update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 100
    && sudo update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 100
  - conda init bash
    && . ~/.bashrc
    && conda create -y --name pyomexmeta-test python=3.7
    && conda activate pyomexmeta-test
    && pip install cpp-coveralls gcovr ipython codecov nose graphviz coverage sphinx breathe python-libcombine tellurium
#    && pip install --index-url https://test.pypi.org/simple/ pyomexmeta
#  - cd ${HOME} && git clone https://github.com/sys-bio/libOmexMeta.git && cd libOmexMeta
  - g++ --version
  - GCOVR_COMMAND=$(which gcovr)
  - echo "$GCOVR_COMMAND"
  - pwd
  - ls
install:
  - cd ${TRAVIS_BUILD_DIR} && mkdir build && cd build
  - ${HOME}/cmake-3.15.7-Linux-x86_64/bin/cmake -DVCPKG_ROOT=${HOME}/vcpkg -DCMAKE_INSTALL_PREFIX=${HOME}/install -DBUILD_TESTS=ON -DBUILD_SHARED_LIBS=ON -DWITH_COVERAGE=ON -DCMAKE_BUILD_TYPE=Release -DGCOVR_PATH=$GCOVR_COMMAND ..
  - make -j 8
  - make install
script:
#  - conda activate pyomexmeta-test
#  - cd ${HOME}/libOmexmeta/build
#  - ctest
  - make ctest
  - ${HOME}/install/bin/OmexMetaTests
  - ${HOME}/install/bin/redland-wrapper-tests
  - make TestCoverageHtml
  - make TestCoverageXml
  - cp /home/travis/build/sys-bio/libOmexMeta/build/TestCoverageXml.xml /home/travis/build/sys-bio/libOmexMeta/build/coverage.xml
  -
#  - nosetests ${HOME}/libOmexMeta/tests/python
after_success:
#  - codecov # submit coverage : for python. No work.
  - bash <(curl -s https://codecov.io/bash) -t 03230181-dc42-4e8c-b1f6-46699ee5d066
  - coveralls --exclude tests --gcov-options '\-lp' gcov=${GCOVR_COMMAND} -r ${TRAVIS_BUILD_DIR} -B ${TRAVIS_BUILD_DIR}/build -i ${TRAVIS_BUILD_DIR}/build/src/omexmeta/ -i ${TRAVIS_BUILD_DIR}/build/src/redland/RedlandAPIWrapper -e ${TRAVIS_BUILD_DIR}/build/src/redland/RedlandAPIWrapper/test -t LIcCj7cYF1DBxqHO80fauUQCiKkSsfBfC 
